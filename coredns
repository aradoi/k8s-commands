# The service name gets registered in coredns
# Pods rely on coredns to resolve service names and reach the services on their corresponding IPs.
# coredns is connected to the apiserver, to watch and listen the service, pods, endpoints. it resolves any query that aims to have an IP from the cluster and forward upstream every query that are out of the cluster (external DNS?)
# Pods are the ones that query to find the IP of the services and the domain. the domain can be inside or outside the cluster.
# When coredns is deployed in k8s, you get the following: a serviceaccount, a clusterrole, a clusterrolebinding, a confimap (named coredns - reside the corefile and key, which is the config for coredns. each time this configmap will be changed, the config will be pushed to all core DNS pods that are running. A deployment will get created as well, at least 2 replicas of coredns, image located by default in k8s repo: k8s.gcr.io/coredns:1.2.6.